#The kinetic modules of the HyGlycoM are developed in gPROMS 5.1.1 (PSE) software
#Model (adapted from: https://onlinelibrary.wiley.com/doi/full/10.1002/bit.26960)

PARAMETER
n           AS      integer #reactions number in the HCP network
k           AS      integer #OS nymber in the HCP network

m           AS      integer #reactions number in the mAb network
p           AS      integer #OS nymber in the mAb network

comp        AS      integer #number of compartments
t_golgi     AS      integer #min of a OS in golgi
V_golgi     AS      REAL

Enzymes     AS      ORDERED_SET

V_cell  AS  REAL
MW      AS  REAL
MW_HCPs AS  REAL

#OS_in           AS      ARRAY(k)    OF  REAL # fraction of each OS in the inlet flow    

kf_UDPGal       AS  REAL
#TP_UDPGal       AS  REAL
#Km_UDPGal       AS  REAL
#distr_TP_Gal    AS ARRAY(comp) OF REAL

kf_UDPGlcNAc    AS  REAL
#TP_UDPGlcNAc    AS  REAL
Km_UDPGlcNAc    AS  REAL
#distr_TP_GlcNAc AS ARRAY(comp) OF REAL

kf_GDPFuc    AS  REAL
#TP_GDPFuc    AS  REAL
#Km_GDPFuc    AS  REAL
#distr_TP_Fuc    AS ARRAY(comp) OF REAL

kf_CMPNeu5Ac    AS  REAL
#TP_CMPNeu5Ac    AS  REAL
Km_CMPNeu5Ac    AS  REAL
#distr_TP_Sia    AS ARRAY(comp) OF REAL

Acomp           AS  REAL

VARIABLE
t as factor
#Cell culture and NSD model
V AS volume
Xv AS cell_density
Xt AS cell_density
Fin AS flow
Fout AS flow
mu AS rate
mu_max AS rate
mu_d_max AS rate
mu_d AS rate
Klysis AS rate
flim AS factor
finh AS factor

Kglc AS concentration
Klac AS concentration
Kasn AS concentration
Kglu AS concentration
Kgln AS concentration


KIlac AS concentration #inhibition
KIamm AS concentration
KIurd AS concentration
KIgal AS concentration

Kd_amm AS concentration #death
Kd_urd AS concentration
Kd_gal AS concentration
Kd_urd_gal AS concentration
Kd_asn AS concentration

Urd AS concentration
Gal AS concentration

Glc AS concentration #extracellular
Glu AS concentration
Gln AS concentration
Asn AS concentration
Asp AS concentration
Lac AS concentration
Arg AS concentration
Lys AS concentration
Pro AS concentration
Amm AS concentration
                                             #metabolism

Kgal AS concentration
Kurd AS concentration

Urd_feed AS concentration
Gal_feed AS concentration

Qglc AS rate
Qgln AS rate
Qlac AS rate
Qasn AS rate
Qasp AS rate
Qglu AS rate
Qarg AS rate
Qlys AS rate
Qpro AS rate
Qamm AS rate
Qgal AS rate
Qurd AS rate

Glc_feed AS concentration #concentration in the feed
Glu_feed AS concentration
Gln_feed AS concentration
Asn_feed AS concentration
Asp_feed AS concentration
Arg_feed AS concentration
Lys_feed AS concentration
Pro_feed AS concentration
Amm_feed AS concentration

Yx_glc AS yield
Yx_gln AS yield
Yx_glu AS yield
Yx_lac AS yield
Yx_amm AS yield
Yx_asn AS yield
Yx_asp AS yield
Yx_arg AS yield
Yx_lys AS yield
Yx_pro AS yield
Yx_gal AS yield
Yx_urd AS rate

Ygln_glu AS factor
Ygln_asn AS factor #mine factor
Ygln_amm AS factor
Ylac_glc AS factor
Yasp_asn AS factor
Yarg_glu AS factor
Ylys_glu AS factor
Ypro_glu AS factor
Yglu_gln AS factor
Ylac_gal AS factor
Yamm_asn AS factor
Yamm_glu AS factor
Yamm_urd AS factor

m_lac AS rate #mmol/(h*cell), the same units with Q_lac
m_glc AS rate #mmol/(h*cell), the same units with Q_glc
m_asn AS rate
m_gal AS rate
Kamm_gln AS concentration
m_gln AS factor
Kc_gal AS concentration
Km_asn AS concentration

#n AS factor
Ku_g AS concentration

nd_urd AS factor#AS REAL

Yasn_asp AS factor

Lac_max_1 AS factor
Lac_max_2 AS factor

QmAb AS factor #mAb_rate (mg/cell/h)
mAb AS factor #mAb_conc (mg/L)
YmAb_Xv AS factor #yield (mg/cell/h)
YmAb_mu AS factor #yield (mg/cell)

HCP AS factor
Qhcp AS factor
DCW AS factor # Dry Cell Weight (pg_cell/cell)
CPC AS factor # cell protein content (% of pg_prot/pg_cell)

ng as factor

factor as factor

#intra

Fin_glc AS     factor   #mmol/(dm^2 hr)
Fin_gln AS     factor   #mmol/(dm^2 hr)
Glc_int AS      Molar_Conc  #mM [=] mmol/L_cell
Gln_int AS      Molar_Conc  #mM [=] mmol/L_cell
f2 as factor

#NSDs

UDPGlcNAc   AS	Molar_Conc  #uM [=] umol/L_cell
UDPGlc      AS	Molar_Conc  #uM [=] umol/L_cell
GDPMan      AS	Molar_Conc  #uM [=] umol/L_cell
UDPGalNAc   AS  Molar_Conc  #uM [=] umol/L_cell
CMPNeu5Ac   AS	Molar_Conc  #uM [=] umol/L_cell
UDPGal      AS	Molar_Conc  #uM [=] umol/L_cell
GDPFuc	    AS	Molar_Conc  #uM [=] umol/L_cell

r_met_glc   AS	Rate        #umol_met/(L_cell hr)
r_met_gln   AS	Rate        #umol_met/(L_cell hr)

#### feeding terms #####
r1_urd AS Rate
r4_urd AS Rate
r6_urd AS Rate
r6_gal AS Rate
r2_urd AS rate
r6_sink AS Rate
r7_sink as Rate
r1_sink as Rate

Vmax1u as rate
Vmax4u as rate
Vmax6u as rate
Vmax6g as rate
Vmax2u as rate
Vmax6_sink as rate
Vmax7_sink as rate
Vmax1_sink as rate

K1u as concentration
K4u as concentration
K6u as concentration
K6g as concentration
K2u as concentration
K6_sink as concentration
K7_sink as concentration
K1_sink as concentration

Ki1_sink as concentration
Ki6_sink as concentration
Ki6_urd as concentration
Ki6_glc as concentration
Ki6_gal as concentration
Ki6_ugal as concentration

########################## NSD rates ############

r1_f        AS	Rate        #umol/(L_cell hr)
r2_f        AS	Rate        #umol/(L_cell hr)
r2_bf       AS  Rate
r3_f        AS	Rate        #umol/(L_cell hr)
r4_f        AS	Rate        #umol/(L_cell hr)
r4_bf       as  Rate
r5_f        AS	Rate        #umol/(L_cell hr)
r6_f        AS	Rate        #umol/(L_cell hr)
r7_f        AS	Rate        #umol/(L_cell hr)

Fout_UDPGlcNAc  AS  Rate    #umol/(L_cell hr)
Fout_UDPGlc     AS  Rate    #umol/(L_cell hr)
Fout_GDPMan     AS  Rate    #umol/(L_cell hr)
Fout_UDPGalNAc  AS  Rate    #umol/(L_cell hr)
Fout_CMPNeu5Ac  AS  Rate    #umol/(L_cell hr)
Fout_UDPGal     AS  Rate    #umol/(L_cell hr)
Fout_GDPFuc     AS  Rate    #umol/(L_cell hr)

Vmax1 AS rate
Vmax2 AS rate
Vmax2b as rate
Vmax3 AS rate
Vmax4 AS rate
Vmax4b as rate
Vmax5 AS rate
Vmax6 AS rate
Vmax7 AS rate

k_T_glc     AS  Rate        #mmol_glc/(dm^2 hr)
k_T_gln     AS  Rate        #mmol_gln/(dm^2 hr)

Kdf_E1  AS	Molar_Conc  #mM [=] mmol/L_cell
Kdf_E1_gln  AS	Molar_Conc  #mM [=] mmol/L_cell
Kdf_E2  AS	Molar_Conc  #mM [=] mmol/L_cell
Kdf_E2b AS	Molar_Conc  #mM [=] mmol/L_cell
Kdf_E3  AS	Molar_Conc  #mM [=] mmol/L_cell
Kdf_E4  AS	Molar_Conc  #mM [=] mmol/L_cell
Kdf_E4b as      concentration
Kdf_E5  AS	Molar_Conc  #mM [=] mmol/L_cell
Kdf_E6  AS	Molar_Conc  #mM [=] mmol/L_cell
Kdf_E7  AS	Molar_Conc  #mM [=] mmol/L_cell
Kdf_Glc_UDPGlc as concentration
Kdf_Glc_GDPMan as concentration
Kdf_E1_glc as concentration

KiE2A as factor
KiE2B as factor
KiE2C as factor
KiE2D as factor
Ki2_gal as concentration
Ki2_urd as concentration
Ki_E5	AS	Molar_Conc  #mM [=] mmol/L_cell
KiE6A as factor
KiE6B as factor
KiE6C as factor
Ki_E7	AS	Molar_Conc  #mM [=] mmol/L_cell
Ki3_glc as concentration
KiE4A as concentration
KiE4B as concentration
KiE4C as concentration
KiE4bA as concentration
KiE4bB as concentration
KiE4bC as concentration

fo_glc   AS	Stoich_Coeff
fo_gln   AS	Stoich_Coeff

m5 as factor
#Fout factors
KTP_UDPGlc    AS concentration
KTP_UDPGal    AS concentration
KTP_UDPGlcNAc AS concentration
KTP_UDPGalNAc AS concentration
KTP_GDPMan    AS concentration
KTP_GDPFuc    AS concentration
KTP_CMPNeu5Ac AS concentration
#mine Fout,NSD terms
Nhcp_lipids_UDPGlc AS factor #mmolNSD/cell
Nhcp_lipids_UDPGlcNAc AS factor #mmolNSD/cell
Nhcp_lipids_UDPGal AS factor #mmolNSD/cell
Nhcp_lipids_UDPGalNAc AS factor #mmolNSD/cell
Nhcp_lipids_GDPMan AS factor #mmolNSD/cell
Nhcp_lipids_GDPFuc AS factor #mmolNSD/cell
Nhcp_lipids_CMPNeu5Ac AS factor #mmolNSD/cell

NmAb_UDPGlc AS factor #mmolNSD/gmAb
NmAb_UDPGlcNAc AS factor #mmolNSD/gmAb
NmAb_UDPGal AS factor #mmolNSD/gmAb
NmAb_UDPGalNAc AS factor #mmolNSD/gmAb
NmAb_GDPMan AS factor #mmolNSD/gmAb
NmAb_GDPFuc AS factor #mmolNSD/gmAb
NmAb_CMPNeu5Ac AS factor #mmolNSD/gmAb

NmAb_UDPGlcNAc_b AS factor

N_UDPGlc_Glc as factor
N_UDPGlcNAc_Glc as factor 
N_GDPMan_Glc as factor

#r_UDPGal_glyc       AS factor #μΜ_NSD/min (in order to get into the NSD model it has to take the form of mM/h)
#r_UDPGlcNAc_glyc    AS factor
#r_GDPFuc_glyc       AS factor
#r_CMPNeu5Ac_glyc    AS factor

N_Oglyc_lipids_UDPGlc      AS factor #mmolNSD/cell
N_Oglyc_lipids_UDPGlcNAc   AS factor
N_Oglyc_lipids_UDPGal      AS factor
N_Oglyc_lipids_UDPGalNAc   AS factor
N_Oglyc_lipids_GDPMan      AS factor
N_Oglyc_lipids_GDPFuc      AS factor
N_Oglyc_lipids_CMPNeu5Ac   AS factor
#######################################################################################################################################################################################################

EQUATION
##############################################   Growth    #######################################


$V = Fin - Fout;

$(V*Xv) = mu*V*Xv - mu_d*V*Xv - Fout*Xv;

$(V*Xt) = mu*V*Xv - Klysis*V*(Xt-Xv) - Fout*Xt;

mu = mu_max*flim*finh;

flim =Glc/(Kglc+Glc)*Asn/(Kasn+Asn);

finh = (KIamm/(KIamm + Amm)) * (KIlac/(KIlac + Lac)) * (KIurd/(KIurd + Urd));

mu_d = mu_d_max*(Amm/(Kd_amm+Amm)+Urd/(Kd_urd+Urd)) ;


###############################################################METABOLISM#####################################


#Glucose 
$(V*Glc)= +Fin*Glc_feed - Fout*Glc + Qglc*V*Xv ; 

Qglc =(-mu/Yx_glc - m_glc)*(Kc_gal/(Kc_gal+Gal))^ng; 

ng = 1 - factor*(Qgal/Qglc);

#Glutamine
$(V*Gln) = Qgln*V*Xv +Fin*Gln_feed - Fout*Gln; 

Qgln = + mu/Yx_gln - Qglu*Ygln_glu - Qasn*Ygln_asn + Ygln_amm*Qamm; 

#Lactate
$(V*Lac) = Qlac*V*Xv - Fout*Lac; 

Qlac=(mu/Yx_lac  - Ylac_glc*Qglc {-Ylac_gal*Qgal})*(Lac_max_1 -Lac)/Lac_max_1 + m_lac*(Lac_max_2-Lac)/(Lac_max_2);

#Ammonia
$(V*Amm) = Qamm*V*Xv +Fin*Amm_feed - Fout*Amm; 

Qamm= + mu/Yx_amm - Yamm_urd*Qurd ;

#Asparagine
$(V*Asn)=Qasn*Xv*V +Fin*Asn_feed - Fout*Asn;

Qasn = (-mu/Yx_asn) - Yasn_asp*Qasp;

#Aspartate
$(V*Asp)=Qasp*Xv*V +Fin*Asp_feed - Fout*Asp;

Qasp = Qasn*Yasp_asn-mu/Yx_asp;

#Arginine
$(V*Arg)=Qarg*Xv*V +Fin*Arg_feed - Fout*Arg;

Qarg = Qglu*Yarg_glu-mu/Yx_arg;

#Lysine
$(V*Lys)=Qlys*Xv*V +Fin*Lys_feed - Fout*Lys; 

Qlys = Qglu*Ylys_glu-mu/Yx_lys;

#Proline
$(V*Pro)=Qpro*Xv*V +Fin*Pro_feed -Fout*Pro;

Qpro = Qglu*Ypro_glu -mu/Yx_pro;

#Glutamate
$(V*Glu)=Qglu*Xv*V +Fin*Glu_feed -Fout*Glu; 

Qglu = -mu/Yx_glu ;

#Galactose
$(V*Gal) = Qgal*V*Xv  - Fout*Gal + Fin*Gal_feed;#

Qgal=(-mu/Yx_gal)*(Gal/(Gal+Kgal)); 

#Uridine
$(V*Urd) = Qurd*V*Xv - Fout*Urd +Fin*Urd_feed;#

Qurd = -Urd/(Kurd+Urd)*mu/Yx_urd;

##########################################    mAbs SYNTHESIS   ##########################################

$(V*mAb) = QmAb*V*Xv - Fout*mAb;

QmAb = YmAb_mu*mu + YmAb_Xv;

Qhcp = (DCW*1E-9)*(CPC/100)*mu; #del Val et al 2016 Sc.R.

$(HCP) = Qhcp/V_cell;#mg/Lcell
############################# nucleotides and NSD ####################################################

# intracellular dynamics

Fin_glc = (k_T_glc) * Glc ;
Fin_gln = (k_T_gln) * Gln ;
r_met_glc = - fo_glc * (1/V_cell) * Qglc ;
r_met_gln = fo_gln * (1/V_cell) * Qgln ;

Gln_int = f2*Gln;
$Glc_int = -fo_glc*Qglc/V_cell - (N_UDPGlc_Glc*r2_f + N_UDPGlcNAc_Glc*r1_f + N_GDPMan_Glc*r3_f {+ r_met_glc});

# NSD
$GDPMan = r3_f - r7_f - Fout_GDPMan;
$GDPFuc = r7_f - r7_sink - Fout_GDPFuc;
$UDPGlcNAc = r1_f + r1_urd - r4_f - r5_f - r1_sink - Fout_UDPGlcNAc;
$UDPGalNAc = r4_f + r4_urd - Fout_UDPGalNAc;
$CMPNeu5Ac = r5_f - Fout_CMPNeu5Ac;
$UDPGal = r6_f + r6_urd + r6_gal - r6_sink - Fout_UDPGal;  
$UDPGlc = r2_f + r2_bf + r2_urd - Fout_UDPGlc;

r1_f * (Kdf_E1_gln + Gln_int)= Vmax1* Gln_int;
r2_f * (Kdf_Glc_UDPGlc + Glc) = Vmax2 * Glc;
r2_bf = Vmax2b*UDPGal/(Kdf_E6*(1 + UDPGlcNAc/KiE2A + UDPGalNAc/KiE2B + UDPGlc/KiE2C + UDPGal/KiE2D) + UDPGal);
r3_f * (Kdf_Glc_GDPMan + Glc) = Vmax3 * Glc;
r4_f * (Kdf_E4 + UDPGlcNAc) = Vmax4 * UDPGlcNAc; 
r4_bf * (Kdf_E4 + UDPGalNAc)= Vmax4b * UDPGalNAc; # it's not used in the mass balances
r5_f * ((UDPGlcNAc + Kdf_E5*(1+CMPNeu5Ac/Ki_E5))) = Vmax5 * UDPGlcNAc;
r6_f  = (Vmax6*UDPGlc) / (Kdf_E6*(1 + UDPGlcNAc/KiE6A + UDPGalNAc/KiE6B + UDPGal/KiE6C) + UDPGlc);
r6_gal*(K6g*(1+UDPGal/Ki6_ugal + Gal/Ki6_gal + Urd/Ki6_urd) + Gal)  =  Vmax6g*Gal;
r7_f * (Kdf_E7 + GDPMan)*(1+GDPFuc/Ki_E7)= Vmax7 * GDPMan;


r7_sink = Vmax7_sink * (GDPFuc/(GDPFuc+K7_sink));
r1_sink * (UDPGlcNAc+K1_sink)*(1+CMPNeu5Ac/Ki1_sink) = Vmax1_sink * UDPGlcNAc;
r6_sink = Vmax6_sink * UDPGal/(UDPGal + K6_sink*(1+UDPGlc/Ki6_glc))*(Gal/(Gal+0.00001)); # the last term exists for not having UDPGal_sink when Gal is not fed

# uridine rates
r1_urd = Vmax1u*Urd/(K1u + Urd);
r2_urd = Vmax2u*Urd/(K2u + Urd);
r4_urd = Vmax4u*Urd/(K4u + Urd);
r6_urd = Vmax6u*Urd/(K6u + Urd);

#Fout
#Perhaps in the Fout I can replace the "mu" with the newly inserted QHCP
Fout_UDPGlc = UDPGlc/(KTP_UDPGlc + UDPGlc)*(Nhcp_lipids_UDPGlc*mu/V_cell  +  NmAb_UDPGlc*QmAb/V_cell);#According to '' A theoritical estimate for nucleotide...'' del Val et al. 2016:
Fout_UDPGal = UDPGal/(KTP_UDPGal + UDPGal)*(Nhcp_lipids_UDPGal*mu/V_cell + NmAb_UDPGal*QmAb/V_cell);#(N_Oglyc_lipids_UDPGal*mu/V_cell + r_UDPGal_glyc/1000*60);#  r_UDPGal_glyc/1000*60);#);
Fout_UDPGlcNAc = UDPGlcNAc/(KTP_UDPGlcNAc + UDPGlcNAc)*(Nhcp_lipids_UDPGlcNAc*mu/V_cell  +  NmAb_UDPGlcNAc*QmAb/V_cell +  NmAb_UDPGlcNAc_b*QmAb/V_cell);#(N_Oglyc_lipids_UDPGlcNAc*mu/V_cell + r_UDPGlcNAc_glyc/1000*60);#+  r_UDPGlcNAc_glyc/1000*60);#NmAb_UDPGlcNAc*QmAb);
Fout_UDPGalNAc = UDPGalNAc/(KTP_UDPGalNAc + UDPGalNAc)*(Nhcp_lipids_UDPGalNAc*mu/V_cell  +  NmAb_UDPGalNAc*QmAb/V_cell);
Fout_GDPMan = GDPMan/(KTP_GDPMan + GDPMan)*(Nhcp_lipids_GDPMan*mu/V_cell  +  NmAb_GDPMan*QmAb/V_cell);
Fout_GDPFuc = GDPFuc/(KTP_GDPFuc + GDPFuc)*(Nhcp_lipids_GDPFuc*mu/V_cell  + NmAb_GDPFuc*QmAb/V_cell);# (N_Oglyc_lipids_GDPFuc*mu/V_cell + r_GDPFuc_glyc/1000*60);# r_GDPFuc_glyc/1000*60);#);
Fout_CMPNeu5Ac = CMPNeu5Ac/(KTP_CMPNeu5Ac + CMPNeu5Ac)*(Nhcp_lipids_CMPNeu5Ac*mu/V_cell  + NmAb_CMPNeu5Ac*QmAb/V_cell);#(N_Oglyc_lipids_CMPNeu5Ac*mu/V_cell + r_CMPNeu5Ac_glyc/1000*60);#+  r_CMPNeu5Ac_glyc/1000*60);#;#NmAb_CMPNeu5Ac*QmAb);

$t=1;

#Process (adapted from: https://onlinelibrary.wiley.com/doi/full/10.1002/bit.26960)

UNIT

cell AS HCP_mAb_GlycoModel_ER_2_TPs_Fleischer_corrected_hcp_NSDs

SET

WITHIN cell DO

V_cell  :=  1.123e-12;#2.5e-12 ;   # [=] L/v.cell
MW      :=  165174;#150000 ;    # [=] g_prod/mol_prod
MW_HCPs :=  46167;

n := 282;
k := 180;

m := 95;
p := 77;

comp := 4;
t_golgi := 22;
V_golgi := 1.15E-14; #L

Enzymes     := ['ManI','ManII','GnTI','GnTII','GnTIII','GnTIV','GnTV','FucT','GalT','SiaT','iGnT'];
    
kf_UDPGal   := 948;#689; #min-1
#TP_UDPGal   := 0.7E-6; #uM_protein
#Km_UDPGal   := 420;#2.4;#220;#420;#2.4;#220;#2.4; #uM

kf_UDPGlcNAc   := 1422;#1084; #min-1
#TP_UDPGlcNAc   := 0.8E-6; #uM_protein
Km_UDPGlcNAc   := 400;#7.13; #uM

kf_GDPFuc   := 130; #min-1
#TP_GDPFuc   := 0.37E-6; #uM_protein
#Km_GDPFuc   := 7.5; #uM

kf_CMPNeu5Ac   := 592;#397; #min-1
#TP_CMPNeu5Ac   := 0.82E-6; #uM_protein
Km_CMPNeu5Ac   := 200;#1.3; #uM

Acomp       := 9.9E-9;#dm2 golgi surface


END

ASSIGN
WITHIN cell DO
Fin :=0;
Fout :=0;

############################################## mu and Xv related ########################################################
mu_max := 3.89e-2;#0.065;
mu_d_max := 1.41e-2;#0.015;

Klysis :=0.5; 

Kglc :=14.0378;#1;
Klac :=0.00001;
Kasn :=2.62371;#1.99439;#5.87121;
Kglu :=0.000001;
Kgln :=0.00000454277;

KIlac :=1000;
KIamm :=3.16935;#4.29321;#3.22084;
KIurd :=41.0875;#41.2322;#522.37;
KIgal :=1000;#180.92;

Kd_amm :=14.2830;#17.6904;#7.47082;
Kd_urd :=27.8752;#27.7033;#1261.7;
Kd_gal :=10e3;
Kd_urd_gal :=1E-6;
Kd_asn := 7.8805E-02;
##############################################################################################

                                           #metabolism
Km_asn := 7.0288;

Kgal :=18.2317;#10;#17.2302;#51.015;
Kurd :=7.00810;#7.45889;#0.0001;#1.0000E+04;

Urd_feed := 0;
Gal_feed := 0;

Glc_feed :=144.37;
Glu_feed :=12.19;
Asp_feed :=51.95;
Arg_feed :=9.16;
Asn_feed :=26.99;
Lys_feed :=16.64;
Pro_feed :=10.18;

#Phil feeds
Gln_feed :=0;
Amm_feed :=0.06;


Yx_glc :=1.0115e9;#6.81954e8;#6.95664e8;#9.85388e8;
Yx_gln := 4.64127e9;#1.1e10;#5.23477e9;#5e9;#1e10;#4.64127e9;#4.95854e10;#2.99635e10                      ;#4.19744e15;#3.96707e15;#1.29429e15;#8.90767e14;
Yx_glu := 1.45647e10;#6.96090e9;#9.28e9; 
Yx_lac :=5.45539e7;#1.93022;#4.48102e7;
Yx_amm :=2.36299e9;#1.61764e9;#2.39227e9;
Yx_gal :=1.38498e8;#2.99779e8;#1.61760;#8e17;
Yx_urd :=1.61202e9;#1.57826e9;#3.9984e9;#1.57E7;

Yx_asn := 3.46e8;#7.6824e8;#7.8e8;#7.1E10;
Yx_asp :=3.59E9;
Yx_arg :=2.64E10;
Yx_lys :=1.75E10;
Yx_pro :=3.26e11;


Ygln_glu := 0;#1;#0.75;#0.264294;#1;#0                            ;#0.141300;#0.164522;#0.999344;#1;
Ygln_asn := 0                            ;#0.169801;#0.198063;#0.218174;#0.16945;
Ygln_amm := 0.104524;#0;#0.104524;#0.566056;#0.613649                    ;#0.0864748;
Ylac_glc :=1.56;  #Yoon et. al 2003 ''Effect of low culture temperature on specific productivity,transcription level, and heterogeneity of erythropoietin in Chinese hamster ovary cells.##
Yasp_asn :=0.126;
Yarg_glu :=0.007;
Ylys_glu :=0.116;
Ypro_glu :=1;
Yglu_gln :=0.117387;#1E-10;
Ylac_gal :=1;#0.1;
Yamm_asn :=6.8711E-01;
Yamm_glu :=0.6;
Yamm_urd := 2;

m_lac :=1.87253e-10;#2.30586e-10;#mmol/cell/h
m_glc := 3.43293e-11;#3.25668e-11;#3.70276e-11;#3.45921e-11;
m_asn :=4.4200E-11;
Kamm_gln :=0.03891;
m_gln :=4.8000E-12;
Kc_gal :=5.27033;#11.1439;#2.9166E+02;
m_gal := 8e-10;#8.65e-10;# mine from excel file CHO growth_from_gPROMS located in Data files # Philip: 0;

Ku_g :=0.5;

nd_urd :=1.3301;

Lac_max_1 := 21.1983;
Lac_max_2 := 16;

#n:=1;#0.768867;#1.5;

Yasn_asp := 0.1;

#ng := 1;

factor := 0.347987069;#2.87367;
###############################################  mAb #######################################

YmAb_Xv :=1.07e-9;#4.12718e-10;# mine from excel: 4.2004e-10;# Susi: 8.8900E-10;
YmAb_mu :=3.38956e-9;#Phil's: 1.09e-8;#0 ;# Phil's term. It's zero only for the control

DCW     := 271; #pg_cell/cell ,del Val et al 2016 Sc.R.
CPC     := 74.2; #(%) ,del Val et al 2016 Sc.R.
####################################### NSD ############################################################

#Glc and Gln intracellular
k_T_glc	:=	1.58537;
k_T_gln	:=	2.54372;
f2 := 0.0222435;#0.1;
fo_Gln := 0.979388;
N_UDPGlc_Glc := 1.11;
N_UDPGlcNAc_Glc := 1.24;
N_GDPMan_Glc := 2;#0.71;
fo_Glc := 0.001;#771;#9.40311;

#####################################

#NSDs
#Vmax
Vmax1 := 0.71;#     0.921507;#1.75715;#1.75412;#18.6814;#72.2308;#100;
Vmax2 := 0.024    ;#0.0169968;# +/- 0.0009782           0.009994;#0.01;#0.0753463;
Vmax2b := 0.001;#    59.4891;# +/-6.209                     59.2764;#40.0742;#81.5613;#8.68874;#10.7968;
Vmax3 := 0.487        ;#   0.0550887;#0.6;#10;#0.1;#0.00123571;#0.00405149;#1;#0.001;
Vmax4 := 0.00467;       #0.0265253;#0.0152957;#0.0152689;#0.0129516;#0.0183230;
Vmax4b := 0.01;
Vmax5 := 0.00001;#       0.0001;#0.001;#0.01;#;
Vmax6 := 54.6722;#           5.1304;#3.23341;#0.115672;#10;#0.210744;
Vmax7 := 1.98221;#      4.59677;#2.21281;#0.05;#0.554861;#0.495141;#0.1;#10;#0.1;

#Kdf
Kdf_E1 := 492.996;
Kdf_E1_glc := 10;#0.01;#327.982;#20;
Kdf_E1_gln := 0.418760;#2.38802;#2.66425;#100;#2.45066;
Kdf_E2 := 60.2446;
Kdf_E2b := 0.0248298;# +/-0.002585 (it;s the kdf_E61 in the reduced model)
Kdf_E3 := 492.479;
Kdf_E4 := 2.31278;#0.585373;#0.430852;#0.893511;
Kdf_E4b := 0.5;
Kdf_E5 := 0.0269656;#2;#0.220937;
Kdf_E6 := 0.0163559;#0.116887;#0.114452;#10;#0.0339358;#9.50976;
Kdf_E7 := 0.994547;#0.0853766;#0.01;#101;#0.1;#51.5408;#0.01;#10;

Kdf_Glc_UDPGlc := 78.1241;# +/- 6.719                                                              78.4404;#50.2530;#48.6767;#1000;#490.5248;
Kdf_Glc_GDPMan := 50;#185.685;#500;#20;#76.530; 

#Ki
KiE2A := 1.04504e-6;#1e-5;#0.000672642;#0.0117294;#0.00195714;
KiE2B := 92.1059;#0.216406;#0.380354;#0.508810;#100;
KiE2C := 0.0132697;#7.65418e-5;#0.00756725;#0.0476007;#0.0238905;
KiE2D := 2.66102e-6;#0.0001;
Ki3_glc :=4.15469;#100;
KiE4A :=0.1;
KiE4B :=0.1;
KiE4C :=0.1;
KiE4bA :=0.1;
KiE4bB :=0.1;
KiE4bC :=0.1;
Ki_E5 := 1000;#0.0268144;
KiE6A := 1.10182e-7;#3.07814e-6;#0.000133357;#0.000152208;#0.00779703;
KiE6B := 4.57309;#5.05605;#0.0347001;#0.000334066;#0.0451704;
KiE6C := 4.83505e-6;#2.64788e-5;#0.000682674;#0.0179941;#100;
Ki_E7	:= 0.0164192;#0.0712115;#0.002;#2.59332;#220.949;#10;#0.0294676;

m5 := 1;#0.01;
########## KTP_NSD

KTP_UDPGlc    := 0.989957;# +/- 0.04468           0.591933;#0.604575;#0.362095;#0.296596;#1.53677;
KTP_UDPGal    := 7.1464;#  +/- 0.3318               7.04311;#                       6.51684;#5.68445;#5;
KTP_UDPGlcNAc := 5.04905;# +/- 2.309                                       2.56127;#                       0.552624;#1;#0.0300315;#0.0298946;#0.0179582;#0.0314801;#0.0561054;
KTP_UDPGalNAc := 11.0558;#1.26100;#1.44709;#1.26612;
KTP_GDPMan    := 0.127219;# +/-0.03421                                 0.0445393;#0.0115243;#0.1;#19.6835;#1;#0.01;#10;
KTP_GDPFuc    := 0.1;#0.001;#0.01;#1.34483;#1;#0.01;#1.08341;
KTP_CMPNeu5Ac := 503.213;#0.01;#1000;#0.104070;

#mine Fout,NSD terms (initial estimation taken from '' A theoritical estimate for nucleotide...'' del Val et al. 2016

Nhcp_lipids_UDPGlc := 1.560e-12; #mmolNSD/cell
Nhcp_lipids_UDPGlcNAc := 1.248e-12;
Nhcp_lipids_UDPGal := 2.288e-12;
Nhcp_lipids_UDPGalNAc := 1.252e-12;
Nhcp_lipids_GDPMan := 3.538e-12;
Nhcp_lipids_GDPFuc := 0.140e-12;
Nhcp_lipids_CMPNeu5Ac := 1.846e-12;

NmAb_UDPGlc := 40.39e-6; #mmolNSD/mgmAb         #40.39e-3; #mmolNSD/gmAb
NmAb_UDPGlcNAc := 26.67e-6;#49.14e-6;                     #49.14e-3;   the 49.14 nmol/mg is the total UDPGlcNAc in the mAb while the 26.67 is the only the two molceules of GlcNAc in the core glycan (4 mol_GlcNAc/mol_mAb)
NmAb_UDPGal := 7.119e-6;                        #7.119e-3;
NmAb_UDPGalNAc := 0;
NmAb_GDPMan := 121.2e-6;                        #121.2e-3;
NmAb_GDPFuc := 12.23e-6;#12.23e-3;
NmAb_CMPNeu5Ac := 0.155e-6;#0.155e-3;

NmAb_UDPGlcNAc_b := 49.14e-6 - 26.67e-6;

N_Oglyc_lipids_UDPGlc := 0.503e-12; #mmolNSD/cell
N_Oglyc_lipids_UDPGlcNAc := 0e-12;
N_Oglyc_lipids_UDPGal := 1.783e-12;
N_Oglyc_lipids_UDPGalNAc := 1.252e-12;
N_Oglyc_lipids_GDPMan := 0.366e-12;
N_Oglyc_lipids_GDPFuc := 0e-12;
N_Oglyc_lipids_CMPNeu5Ac := 1.812e-12;
##################################################################################################################################################################################
Vmax1u :=0.147995;#0.1; #UDPGlcNAc
Vmax2u := 0.00439;#0.0451806;#    0.0485324;#0.05; #UDPGlc
Vmax4u :=0.0127551;#0.07; #UDPGalNAc
Vmax6u :=4.59;#5.34270;#      5.12689;#10;   #UDPGal
Vmax6g := 40.8965;#135.371;#15;#1000;#81.4140;#26.3366;#12.8468;#0.3;#69.3688;#0.05;#0.01;
Vmax6_sink := 7.30429;#5.56442;#0.17;#17.3851;#1.35335;#68.5410;#1.32436;#0.1;#45.2274;#0.5;
Vmax7_sink :=10.9370;#1.16015;#0.01;
Vmax1_sink := 25.4859;#0.01;

K1u :=29.9;#6.08196;#4;
K2u :=0.1;#13.6332;#5;
K4u :=6.24826;#15;
K6u :=0.18;#0.438499;#7;
K6g :=0.600019;#6.45107;#5.69130;#7.07820;#5.0073;#765.617;#50;#1;#200;

K6_sink :=0.128756;#0.128021;#0.219034;#0.190594;#0.224521;#4.92511;#0.197945;#5;#820.396;#10;
K7_sink :=8.87794;#0.0982528;#0.01;
K1_sink :=0.0406881;#1;

Ki1_sink := 0.000120640;#0.01;
Ki2_gal := 100;
Ki2_urd := 20;
Ki6_urd := 0.00058;#0.000911002;#0.01;
Ki6_glc := 0.292793;#1000;#650.857;#0.01;#100;#0.1;
Ki6_gal := 99.6298;#32.7082;#99.9637;#60.0233;#100;
Ki6_ugal := 0.01;#(not bound);#0.0270481;#0.01;#0.0112732;#0.480619;#;10;
Ki6_sink := 10;
###############

#OS1in_mAb := 375.64;#93.91047;#265;#99.95319 ;
#OS1in := 375.64; #assumption: the HCP concentration that is N-linked glycosylated is around the same with the mAb (look at Ios Data excel file)
#Vcomp:=6.25e-15; 
END

INITIAL
cell.t = 0;

WITHIN cell DO
#GROWTH
V=0.1;
Xv=2.00E+08;
Xt=2.00E+08;

#METABOLISM (initial concentrations are based to Philip's Model: Full_4p_model)
Glc =36;
Glu =2.125333333;
Asn =6.09;
Asp =1.05;
Lac =1.391166667;
Arg =1.90;
Lys =2.83;
Pro =3.81;
Amm =0.1;
Urd =0.0;
Gal =0.0;
Gln =0.01;

# mAb SYNTHESIS
mAb =2.76709;# Susi: 140.5;

HCP = 25700;
#intra
Glc_int = 4.45;#5.23;#2.26;#3.3

############## NSD model #######

UDPGlc = 0.09;#0.18951645;
UDPGlcNAc =  0.22;#0.37;#0.001;#0.37367593;
UDPGal = 0.047;#0.05342652;
UDPGalNAc = 0.067;#0.14257092;
GDPMan = 0.6;#0.008380975;
GDPFuc = 0.1;#0.01185;#0.01413165;
CMPNeu5Ac = 0.5475;#0.03202838;

#UDPGal_golgi    = 1500;#2650;
#UDPGlcNAc_golgi = 7400;#1057;#7400;#10000;
#GDPFuc_golgi    = 344;
#CMPNeu5Ac_golgi = 928;

END
SOLUTIONPARAMETERS
    DASolver := "DASOLV"








SCHEDULE
     SEQUENCE

      RESET
        CELL.Fin := 0;
        CELL.Fout:= 0;
        CELL.Gal_feed := 0;
        CELL.Urd_feed := 0;
      END

      CONTINUE FOR 24;
#24

      
      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0;
      END

      CONTINUE FOR 0.01
      
      RESET 
         CELL.Fin := 0;
         CELL.Fout:= 0;
      END

      CONTINUE FOR 23.99
#48


      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0.63;
      END

      CONTINUE FOR 0.01

      RESET
         CELL.Fin := 1;
         CELL.Fout:= 0;
      END

      CONTINUE FOR 0.01

      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0;
      END

      CONTINUE FOR 23.98
#72.0

      
      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0.37;
      END

      CONTINUE FOR 0.01
      
      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0;
      END
      
      CONTINUE FOR 23.99
#96.0


      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0.3;
      END

      CONTINUE FOR 0.01

      RESET
        CELL.Fin := 1;
        CELL.Fout:= 0;
        CELL.Gal_feed   := 21.912;
        CELL.Urd_feed   := 4.3824;
      END

      CONTINUE FOR 0.01

      RESET
        CELL.Fin := 0;
        CELL.Fout:= 0.36;
        CELL.Gal_feed := 0;
        CELL.Urd_feed := 0;
      END

      CONTINUE FOR 0.01

      RESET
        CELL.Fin := 0;
        CELL.Fout:= 0;
      END

      CONTINUE FOR 23.97
#120.0

      RESET
        CELL.Fin := 0;
        CELL.Fout:= 0.24;
      END

      CONTINUE FOR 0.01

      RESET
        CELL.Fin := 0;
        CELL.Fout:= 0;
      END

      CONTINUE FOR 23.99
#144.0


      RESET

        CELL.Fin := 0;
         CELL.Fout:= 0.26;
      END

      CONTINUE FOR 0.01

      RESET
         CELL.Fin := 1;
         CELL.Fout:= 0;
        CELL.Gal_feed   := 6.409;
        CELL.Urd_feed   := 1.2818;

      END

      CONTINUE FOR 0.01

      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0;
         CELL.Gal_feed := 0;
         CELL.Urd_feed := 0;
      END

      CONTINUE FOR 23.98
#168.0


      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0.54;
      END

      CONTINUE FOR 0.01

      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0;
      END

      CONTINUE FOR 23.99
#192.0


      RESET

        CELL.Fin := 0;
        CELL.Fout:= 0.23;
      END

      CONTINUE FOR 0.01

      RESET
         CELL.Fin := 1;
         CELL.Fout:= 0;
         CELL.Gal_feed   := 233.459;
         CELL.Urd_feed   := 46.6918;
      END

      CONTINUE FOR 0.01

      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0.1;
         CELL.Gal_feed   :=  0;
         CELL.Urd_feed := 0;
      END

      CONTINUE FOR 0.01

      RESET
        CELL.Fin := 0;
        CELL.Fout:= 0;
      END

      CONTINUE FOR 23.97
#216.0


      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0.53;
      END

      CONTINUE FOR 0.01

      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0;
      END

      CONTINUE FOR 23.99
#240.0


      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0.23;
      END

      CONTINUE FOR 0.01

      RESET
        CELL.Fin := 1;
        CELL.Fout:= 0;
        CELL.Gal_feed   := 3.967;
        CELL.Urd_feed   := 0.7934;
      END

      CONTINUE FOR 0.01

      RESET
        CELL.Fin := 0;
        CELL.Fout:= 0;
        CELL.Gal_feed := 0;
        CELL.Urd_feed := 0;
      END

      CONTINUE FOR 23.98;
#264.0


      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0.53;
      END

      CONTINUE FOR 0.01

      RESET
         CELL.Fin := 0;
         CELL.Fout:= 0;
      END

      CONTINUE FOR 23.99
#288.0
END

#############################################################################################################################################################

#The ANN module of the HyGlycoM model is developed for Python 3.7.

#Estmation of the mAb glycoprofile based on NSD prediction from the metabolic model

import numpy as np

#######################
#Defining the sigmoid activation function and its derivative
def act_func_sigmoid(x):
    return 1/(1+np.exp(-x))

def act_func_sigmoid_der(x):
    return act_func_sigmoid(x)*(1-act_func_sigmoid(x))

##############################################

error = np.zeros([20,20])   #recording the difference between the output of the network and the experimental data

### Define the training set
for i in range(0, 41):
    print (i)
    for j in range(0, 41):

        np.random.seed(0)
        feature_set = np.array([[0.0183726991627284,	0.01650406552988,	0.01520794246292,	0.0148381782758314,	0.0558761646117539,	0.171630894636261,	0.103103241845479,	0.469622154421602,	0.247119408926328,	0.420284595449271,	0.5],
        [0.0826343574907975,	0.0897889336838478,	0.0935260559530952,	0.0964033367226371,	0.108012453116654,	0.12092554295931,	0.130550181669173,	0.5,	0.229403223439735,	0.336326704479673,	0.458363056156244],
        [0.388891391700973,	0.374659766473817,	0.340880574687301,	0.289369063398563,	0.422528750628343,	0.443831363104643,	0.452869530618517,	0.457075771624724,	0.436053711869045,	0.474554690413508,	0.5],
        [0.423337234394362,	0.414423141055418,	0.389286295630511,	0.349279215172575,	0.447023473278268,	0.463019056650955,	0.469516768128567,	0.470653121041838,	0.456102769260068,	0.483143191458242,	0.5],
        [0.370840602299719,	0.414427854419705,	0.459357055553125,	0.482043564674911,	0.370912092000121,	0.414541133526578,	0.459479173804931,	0.388946497786973,	0.386967152471952,	0.431986250201949,	0.477291987405235],
        [0.024999432463772,	0.0622549975938363,	0.133846231937804,	0.180343810599071,	0.0251259571054356,	0.0630064426821092,	0.135281443588675,	0.213003411753867,	0.127224002250291,	0.254621162041344,	0.415291685278284],
        [0.0137357899397877,	0.0512383449278091,	0.109140244950048,	0.147762386926989,	0.0140475427401576,	0.0522814186746003,	0.11098227523919,	0.195923951777435,	0.0889895778890605,	0.218522579192886,	0.400688604726326]]).T
        
        labels = np.array([[0.064129641,	0.060006061,	0.057963183,	0.060578699,	0.04801502,	0.056749127,	0.05056766,	0.03729378,	0.041926173,	0.03140784,	0.036667007],
        [0.524051425,	0.515046527,	0.520968923,	0.536518635,	0.4891363,	0.484554236,	0.475295968,	0.473100902,	0.418039198,	0.443201672,	0.41417279],
        [0.346344857,	0.363193137,	0.340245869,	0.342065591,	0.3982028,	0.380502521,	0.39632325,	0.391301779,	0.418565498,	0.41475993,	0.417065795],
        [0.004505264,	0.004505264,	0.00285,	0.004378582,	0.004378582,	0.004378582,	0.00486606,	0.00486606,	0.008383955,	0.00375555,	0.006653057],
        [0.046663351,	0.050148329,	0.04065236,	0.047542788,	0.05807403,	0.034639551,	0.065576103,	0.072536927,	0.079412147,	0.074366598,	0.083883881],
        [0.018810726,	0.007100683,	0.034616107,	0.008915705,	0.00657189,	0.043554566,	0.007370959,	0.044413505,	0.029021069,	0.03011102,	0.0345]]).T
        
#ANN parameters
        wh1 = np.random.rand(len(feature_set[0]),i)
        wh2 = np.random.rand(i, j)
        wo  = np.random.rand(j, len(labels[0]))
        lr = 0.5

        #print (wh1) #it was silenced in order to save some time during optimization

        for epoch in range(epochs):
            #FEEDFORWARD
            zh1 = np.dot(feature_set, wh1)
            ah1 = sigmoid(zh1)

            zh2 = np.dot(ah1, wh2)
            ah2 = sigmoid(zh2)
            
            zo = np.dot(ah2, wo)
            ao = sigmoid(zo)

#ANN error
            error_output = ((1/2)*(np.power((ao - labels), 2)))

#Part1: from HL2 to the Output
            dcost_dao = ao - labels
            dao_dzo   = sigmoid_der(zo)
            dzo_dwo   = ah2
            dcost_dwo = np.dot(dzo_dwo.T, dcost_dao*dao_dzo)
#Part2: from HL1 to HL2
            dcost_dzo = dcost_dao*dao_dzo
            dzo_dah2  = wo
            dcost_dah2 = np.dot(dcost_dzo, dzo_dah2.T)
            dah2_dzh2 = sigmoid_der(zh2)
            dzh2_dwh2 = ah1
            dcost_dwh2 = np.dot(dzh2_dwh2.T, dah2_dzh2*dcost_dah2)
#Part2: from the Input to HL1
            dcost_dzh2 = dcost_dah2*dah2_dzh2
            dzh2_dah1  = wh2
            dcost_dah1 = np.dot(dcost_dzh2, dzh2_dah1.T)
            dah1_dzh1 = sigmoid_der(zh1)
            dzh1_dwh1 = feature_set
            dcost_dwh1 = np.dot(dzh1_dwh1.T, dah1_dzh1*dcost_dah1)
#update weights
            wo  -= lr*dcost_dwo
            wh2 -= lr*dcost_dwh2
            wh1 -= lr*dcost_dwh1

        single_point = np.array([[0.191748143223755,	0.312113968081812,	0.380803692849343,	0.409882994978949],
        [0.224617604609086,	0.330026187569855,	0.450128136934431,	0.499273729996663],
        [0.436103830681038,	0.46701285663533,	0.489039004554347,	0.482360295557279],
        [0.456225950784437,	0.478147463538269,	0.492930372387265,	0.489076653811823],
        [0.386966644364922,	0.431988896193274,	0.477296454912327,	0.5],
        [0.127242617709794,	0.254714151191054,	0.415434213492293,	0.5],
        [0.0890932949562721,	0.218677770890606,	0.400698134556139,	0.5]]).T

        
        #results
        resulth1 = sigmoid(np.dot(single_point, wh1))
        resulto1 = sigmoid(np.dot(resulth1, wh2))
        resulto2 = sigmoid(np.dot(resulto1, wo))

        experimental_results = np.array([[0.0521049,	0.049748503,	0.051655478,	0.047616816],
        [0.447665056,	0.418781566,	0.46057572,	0.397471592],
        [0.415573959,	0.418381974,	0.407668677,	0.438894841],
        [0.007361399,	0.008429525,	0.007509387,	0.00345],
        [0.072348746,	0.078123761,	0.069063602,	0.089123178],
        [0.00494594,	0.0264,	0.003527136,	0.021875569]]).T
      

        error_table = abs(resulto2 - experimental_results)
        
        error[i,j] = error_table.sum()

for i in range(0,41):
    for j in range(0,41):
        if error[i,j] == error.min():
            x = i
            y = j

print ("The minimum error is found in the following coordinates (number of nodes): x=", x, ", y=", y)
print ("The error of the optimized NN is: ", error[x,y])
print ("The optimum nodes combination therefore is: HL1: ", x, ", HL2: ", y)
##########################################################################################################################################

######Prediction experiment
#Repeat the network configuration

np.random.seed(0)
        
#ANN parameters
wh1 = np.random.rand(len(feature_set[0]),x)
wh2 = np.random.rand(x, y)
wo  = np.random.rand(y, len(labels[0]))
lr = 0.5

#print (wh1) #it was silenced in order to save some time during optimization

for epoch in range(epochs):
    #FEEDFORWARD
    zh1 = np.dot(feature_set, wh1)
    ah1 = sigmoid(zh1)

    zh2 = np.dot(ah1, wh2)
    ah2 = sigmoid(zh2)
    
    zo = np.dot(ah2, wo)
    ao = sigmoid(zo)

#ANN error
    error_output = ((1/2)*(np.power((ao - labels), 2)))

#Part1: from HL2 to the Output
    dcost_dao = ao - labels
    dao_dzo   = sigmoid_der(zo)
    dzo_dwo   = ah2
    dcost_dwo = np.dot(dzo_dwo.T, dcost_dao*dao_dzo)
#Part2: from HL1 to HL2
    dcost_dzo = dcost_dao*dao_dzo
    dzo_dah2  = wo
    dcost_dah2 = np.dot(dcost_dzo, dzo_dah2.T)
    dah2_dzh2 = sigmoid_der(zh2)
    dzh2_dwh2 = ah1
    dcost_dwh2 = np.dot(dzh2_dwh2.T, dah2_dzh2*dcost_dah2)
#Part2: from the Input to HL1
    dcost_dzh2 = dcost_dah2*dah2_dzh2
    dzh2_dah1  = wh2
    dcost_dah1 = np.dot(dcost_dzh2, dzh2_dah1.T)
    dah1_dzh1 = sigmoid_der(zh1)
    dzh1_dwh1 = feature_set
    dcost_dwh1 = np.dot(dzh1_dwh1.T, dah1_dzh1*dcost_dah1)
#update weights
    wo  -= lr*dcost_dwo
    wh2 -= lr*dcost_dwh2
    wh1 -= lr*dcost_dwh1

pred_point = np.array([[0.111918494071664,	0.13638549089378,	0.430949476903765,	0.452744537978405,	0.377829777472513,	0.0523790996626977,	0.0386380626641863],
[0.205249477705193,	0.217963142584473,	0.466646730266726,	0.478193197527512,	0.422581265775525,	0.146272569871575,	0.144958006421028],
[0.39258820149822,	0.401548335230018,	0.495545665243097,	0.497654993722702,	0.46795025751056,	0.301132457856604,	0.346360038596262],
[0.486795713899214,	0.525084816227517,	0.493788285704169,	0.497065035984554,	0.490719156666577,	0.39407598769001,	0.479435824138779]])
        
#results
predh1 = sigmoid(np.dot(pred_point, wh1))
predo1 = sigmoid(np.dot(predh1, wh2))
predo2 = sigmoid(np.dot(predo1, wo))

experimental_pred = np.array([[0.042676902549474,	0.0393369782217747,	0.0364225212560994,	0.0336869390962543],	
[0.449571764876238,	0.417493994038989,	0.389890740613592,	0.375833999196648],	
[0.393915088922541,	0.412911010668631,	0.426597881614409,	0.444340049671168],	
[0.00195244946600025,	0.0042456899838178,	0.00451464929753922,	0.00385215876374347],	
[0.0632794683467398,	0.0730729543664007,	0.0850602024499383,	0.087625218289684],	
[0.0162081355798862,	0.0151147458408166,	0.013787947187508,	0.011838241054235]]).T	

print (predo2)


